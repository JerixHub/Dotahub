{
  "resolvedId": "C:/Users/Jerixhub/Documents/Dota2/dotahub/composables/useCustomFetch.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Custom fetch composable\r\nexport function useCustomFetch (url, options) {\r\n  const runtimeConfig = useRuntimeConfig()\r\n  const apiUrl = runtimeConfig.public.API_URL // You can set this in your environment variables\r\n\r\n  const requestOptions = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      ...options?.headers\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO:\r\n   * Handle Error Response - unauthorized\r\n   *   - redirect to home if unauthorized\r\n   */\r\n\r\n  return useFetch(apiUrl + url, {\r\n    ...options,\r\n    ...requestOptions\r\n  })\r\n}\r\n",
      "start": 1709213235025,
      "end": 1709213235107,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709213235107,
      "end": 1709213235107,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709213235108,
      "end": 1709213235108,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "// Custom fetch composable\r\nexport function useCustomFetch (url, options) {\r\n  const runtimeConfig = useRuntimeConfig()\r\n  const apiUrl = runtimeConfig.public.API_URL // You can set this in your environment variables\r\n\r\n  const requestOptions = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      ...options?.headers\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO:\r\n   * Handle Error Response - unauthorized\r\n   *   - redirect to home if unauthorized\r\n   */\r\n\r\n  return useFetch(apiUrl + url, {\r\n    ...options,\r\n    ...requestOptions\r\n  }, '$SB9pfF0o5o')\r\n}\r\n",
      "start": 1709213235108,
      "end": 1709213235109,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhG,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,gBAAC,CAAC,CAAC;AACL,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useFetch } from '#app/composables/fetch';\n// Custom fetch composable\r\nexport function useCustomFetch (url, options) {\r\n  const runtimeConfig = useRuntimeConfig()\r\n  const apiUrl = runtimeConfig.public.API_URL // You can set this in your environment variables\r\n\r\n  const requestOptions = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      ...options?.headers\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO:\r\n   * Handle Error Response - unauthorized\r\n   *   - redirect to home if unauthorized\r\n   */\r\n\r\n  return useFetch(apiUrl + url, {\r\n    ...options,\r\n    ...requestOptions\r\n  }, '$SB9pfF0o5o')\r\n}\r\n",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhG,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709213235110,
      "end": 1709213235110,
      "order": "normal"
    }
  ]
}
