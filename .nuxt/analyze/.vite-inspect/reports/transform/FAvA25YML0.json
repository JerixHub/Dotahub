{
  "resolvedId": "C:/Users/Jerixhub/Documents/Dota2/dotahub/pages/profile/[id].vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <div>\r\n        <LazyProfile v-if=\"userHeroes\" :user-data=\"userData\" :user-winloss=\"userWinloss\" :hero-stats=\"heroStats\" :user-most-used-hero=\"userHeroes[0]\" />\r\n        <LazyOverview v-if=\"userHeroes\" :user-heroes=\"userHeroes.slice(0,10)\" :user-matches=\"userMatches\" :user-recent-matches=\"userRecentMatches\" :hero-stats=\"heroStats\" :user-friends=\"userFriends.slice(0,10)\" :user-wordcloud=\"userWordcloud\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { watch } from 'vue'\r\nimport { useStore } from '~/stores/store.js'\r\n\r\nconst route = useRoute()\r\nconst store = useStore()\r\nconst { getUserData, getWinloss, getMatches, getRecentMatches, getFriends, getUserHeroes, getWordcloud, getHeroStats } = store\r\nconst userData = ref(null)\r\nconst userHeroes = ref(null)\r\nconst userMatches = ref(null)\r\nconst userRecentMatches = ref(null)\r\nconst userFriends = ref(null)\r\nconst userWinloss = ref(null)\r\nconst userWordcloud = ref(null)\r\nconst heroStats = ref(null)\r\n\r\nconst userGetData = async () => {\r\n    userData.value = await getUserData(route.params.id)\r\n    userWinloss.value = await getWinloss(route.params.id)\r\n    userMatches.value = await getMatches(route.params.id)\r\n    userRecentMatches.value = await getRecentMatches(route.params.id)\r\n    userFriends.value = await getFriends(route.params.id)\r\n    userHeroes.value = await getUserHeroes(route.params.id)\r\n    userWordcloud.value = await getWordcloud(route.params.id)\r\n    heroStats.value = await getHeroStats()\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  userGetData()\r\n})\r\n</script>\r\n",
      "start": 1709213234054,
      "end": 1709213234309,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { watch } from 'vue'\r\nimport { useStore } from '~/stores/store.js'\r\n\r\n\nconst _sfc_main = {\n  __name: '[id]',\n  setup(__props) {\n\r\nconst route = useRoute()\r\nconst store = useStore()\r\nconst { getUserData, getWinloss, getMatches, getRecentMatches, getFriends, getUserHeroes, getWordcloud, getHeroStats } = store\r\nconst userData = ref(null)\r\nconst userHeroes = ref(null)\r\nconst userMatches = ref(null)\r\nconst userRecentMatches = ref(null)\r\nconst userFriends = ref(null)\r\nconst userWinloss = ref(null)\r\nconst userWordcloud = ref(null)\r\nconst heroStats = ref(null)\r\n\r\nconst userGetData = async () => {\r\n    userData.value = await getUserData(route.params.id)\r\n    userWinloss.value = await getWinloss(route.params.id)\r\n    userMatches.value = await getMatches(route.params.id)\r\n    userRecentMatches.value = await getRecentMatches(route.params.id)\r\n    userFriends.value = await getFriends(route.params.id)\r\n    userHeroes.value = await getUserHeroes(route.params.id)\r\n    userWordcloud.value = await getWordcloud(route.params.id)\r\n    heroStats.value = await getHeroStats()\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  userGetData()\r\n})\r\n\nreturn (_ctx, _cache) => {\n  const _component_LazyProfile = _resolveComponent(\"LazyProfile\")\n  const _component_LazyOverview = _resolveComponent(\"LazyOverview\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyProfile, {\n          key: 0,\n          \"user-data\": _unref(userData),\n          \"user-winloss\": _unref(userWinloss),\n          \"hero-stats\": _unref(heroStats),\n          \"user-most-used-hero\": _unref(userHeroes)[0]\n        }, null, 8, [\"user-data\", \"user-winloss\", \"hero-stats\", \"user-most-used-hero\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyOverview, {\n          key: 1,\n          \"user-heroes\": _unref(userHeroes).slice(0,10),\n          \"user-matches\": _unref(userMatches),\n          \"user-recent-matches\": _unref(userRecentMatches),\n          \"hero-stats\": _unref(heroStats),\n          \"user-friends\": _unref(userFriends).slice(0,10),\n          \"user-wordcloud\": _unref(userWordcloud)\n        }, null, 8, [\"user-heroes\", \"user-matches\", \"user-recent-matches\", \"hero-stats\", \"user-friends\", \"user-wordcloud\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709213234309,
      "end": 1709213234309,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709213234310,
      "end": 1709213234310,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, onMounted, nextTick } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { watch } from 'vue'\r\nimport { useStore } from '~/stores/store.js'\r\n\r\n\nconst _sfc_main = {\n  __name: '[id]',\n  setup(__props) {\n\r\nconst route = useRoute()\r\nconst store = useStore()\r\nconst { getUserData, getWinloss, getMatches, getRecentMatches, getFriends, getUserHeroes, getWordcloud, getHeroStats } = store\r\nconst userData = ref(null)\r\nconst userHeroes = ref(null)\r\nconst userMatches = ref(null)\r\nconst userRecentMatches = ref(null)\r\nconst userFriends = ref(null)\r\nconst userWinloss = ref(null)\r\nconst userWordcloud = ref(null)\r\nconst heroStats = ref(null)\r\n\r\nconst userGetData = async () => {\r\n    userData.value = await getUserData(route.params.id)\r\n    userWinloss.value = await getWinloss(route.params.id)\r\n    userMatches.value = await getMatches(route.params.id)\r\n    userRecentMatches.value = await getRecentMatches(route.params.id)\r\n    userFriends.value = await getFriends(route.params.id)\r\n    userHeroes.value = await getUserHeroes(route.params.id)\r\n    userWordcloud.value = await getWordcloud(route.params.id)\r\n    heroStats.value = await getHeroStats()\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  userGetData()\r\n})\r\n\nreturn (_ctx, _cache) => {\n  const _component_LazyProfile = _resolveComponent(\"LazyProfile\")\n  const _component_LazyOverview = _resolveComponent(\"LazyOverview\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyProfile, {\n          key: 0,\n          \"user-data\": _unref(userData),\n          \"user-winloss\": _unref(userWinloss),\n          \"hero-stats\": _unref(heroStats),\n          \"user-most-used-hero\": _unref(userHeroes)[0]\n        }, null, 8, [\"user-data\", \"user-winloss\", \"hero-stats\", \"user-most-used-hero\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyOverview, {\n          key: 1,\n          \"user-heroes\": _unref(userHeroes).slice(0,10),\n          \"user-matches\": _unref(userMatches),\n          \"user-recent-matches\": _unref(userRecentMatches),\n          \"hero-stats\": _unref(heroStats),\n          \"user-friends\": _unref(userFriends).slice(0,10),\n          \"user-wordcloud\": _unref(userWordcloud)\n        }, null, 8, [\"user-heroes\", \"user-matches\", \"user-recent-matches\", \"hero-stats\", \"user-friends\", \"user-wordcloud\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1709213234310,
      "end": 1709213234311,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "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AAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjrC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC;AACD,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { defineAsyncComponent as __defineAsyncComponent } from \"vue\";\nconst __nuxt_component_0_lazy = __defineAsyncComponent(() => import(\"C:/Users/Jerixhub/Documents/Dota2/dotahub/components/Profile.vue\").then(c => c.default || c))\nconst __nuxt_component_1_lazy = __defineAsyncComponent(() => import(\"C:/Users/Jerixhub/Documents/Dota2/dotahub/components/Overview.vue\").then(c => c.default || c))\nimport { useRoute } from '#app/composables/router';\nimport { ref, onMounted, nextTick } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { watch } from 'vue'\r\nimport { useStore } from '~/stores/store.js'\r\n\r\n\nconst _sfc_main = {\n  __name: '[id]',\n  setup(__props) {\n\r\nconst route = useRoute()\r\nconst store = useStore()\r\nconst { getUserData, getWinloss, getMatches, getRecentMatches, getFriends, getUserHeroes, getWordcloud, getHeroStats } = store\r\nconst userData = ref(null)\r\nconst userHeroes = ref(null)\r\nconst userMatches = ref(null)\r\nconst userRecentMatches = ref(null)\r\nconst userFriends = ref(null)\r\nconst userWinloss = ref(null)\r\nconst userWordcloud = ref(null)\r\nconst heroStats = ref(null)\r\n\r\nconst userGetData = async () => {\r\n    userData.value = await getUserData(route.params.id)\r\n    userWinloss.value = await getWinloss(route.params.id)\r\n    userMatches.value = await getMatches(route.params.id)\r\n    userRecentMatches.value = await getRecentMatches(route.params.id)\r\n    userFriends.value = await getFriends(route.params.id)\r\n    userHeroes.value = await getUserHeroes(route.params.id)\r\n    userWordcloud.value = await getWordcloud(route.params.id)\r\n    heroStats.value = await getHeroStats()\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  userGetData()\r\n})\r\n\nreturn (_ctx, _cache) => {\n  const _component_LazyProfile = __nuxt_component_0_lazy\n  const _component_LazyOverview = __nuxt_component_1_lazy\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyProfile, {\n          key: 0,\n          \"user-data\": _unref(userData),\n          \"user-winloss\": _unref(userWinloss),\n          \"hero-stats\": _unref(heroStats),\n          \"user-most-used-hero\": _unref(userHeroes)[0]\n        }, null, 8, [\"user-data\", \"user-winloss\", \"hero-stats\", \"user-most-used-hero\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyOverview, {\n          key: 1,\n          \"user-heroes\": _unref(userHeroes).slice(0,10),\n          \"user-matches\": _unref(userMatches),\n          \"user-recent-matches\": _unref(userRecentMatches),\n          \"hero-stats\": _unref(heroStats),\n          \"user-friends\": _unref(userFriends).slice(0,10),\n          \"user-wordcloud\": _unref(userWordcloud)\n        }, null, 8, [\"user-heroes\", \"user-matches\", \"user-recent-matches\", \"hero-stats\", \"user-friends\", \"user-wordcloud\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent as __defineAsyncComponent } from \"vue\";\nconst __nuxt_component_0_lazy = __defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/Jerixhub/Documents/Dota2/dotahub/components/Profile.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(c => c.default || c))\nconst __nuxt_component_1_lazy = __defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/Jerixhub/Documents/Dota2/dotahub/components/Overview.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(c => c.default || c))\nimport { useRoute } from '#app/composables/router';\nimport { ref, onMounted, nextTick } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { watch } from 'vue'\r\nimport { useStore } from '~/stores/store.js'\r\n\r\n\nconst _sfc_main = {\n  __name: '[id]',\n  setup(__props) {\n\r\nconst route = useRoute()\r\nconst store = useStore()\r\nconst { getUserData, getWinloss, getMatches, getRecentMatches, getFriends, getUserHeroes, getWordcloud, getHeroStats } = store\r\nconst userData = ref(null)\r\nconst userHeroes = ref(null)\r\nconst userMatches = ref(null)\r\nconst userRecentMatches = ref(null)\r\nconst userFriends = ref(null)\r\nconst userWinloss = ref(null)\r\nconst userWordcloud = ref(null)\r\nconst heroStats = ref(null)\r\n\r\nconst userGetData = async () => {\r\n    userData.value = await getUserData(route.params.id)\r\n    userWinloss.value = await getWinloss(route.params.id)\r\n    userMatches.value = await getMatches(route.params.id)\r\n    userRecentMatches.value = await getRecentMatches(route.params.id)\r\n    userFriends.value = await getFriends(route.params.id)\r\n    userHeroes.value = await getUserHeroes(route.params.id)\r\n    userWordcloud.value = await getWordcloud(route.params.id)\r\n    heroStats.value = await getHeroStats()\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  userGetData()\r\n})\r\n\nreturn (_ctx, _cache) => {\n  const _component_LazyProfile = __nuxt_component_0_lazy\n  const _component_LazyOverview = __nuxt_component_1_lazy\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyProfile, {\n          key: 0,\n          \"user-data\": _unref(userData),\n          \"user-winloss\": _unref(userWinloss),\n          \"hero-stats\": _unref(heroStats),\n          \"user-most-used-hero\": _unref(userHeroes)[0]\n        }, null, 8, [\"user-data\", \"user-winloss\", \"hero-stats\", \"user-most-used-hero\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(userHeroes))\n      ? (_openBlock(), _createBlock(_component_LazyOverview, {\n          key: 1,\n          \"user-heroes\": _unref(userHeroes).slice(0,10),\n          \"user-matches\": _unref(userMatches),\n          \"user-recent-matches\": _unref(userRecentMatches),\n          \"hero-stats\": _unref(heroStats),\n          \"user-friends\": _unref(userFriends).slice(0,10),\n          \"user-wordcloud\": _unref(userWordcloud)\n        }, null, 8, [\"user-heroes\", \"user-matches\", \"user-recent-matches\", \"hero-stats\", \"user-friends\", \"user-wordcloud\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1709213234311,
      "end": 1709213234311,
      "order": "normal"
    }
  ]
}
